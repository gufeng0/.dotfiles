import pysrt
from pysrt.srtfile import sys

def extract_ass_styles(ass_file):
    """提取 .ass 文件中的样式"""
    with open(ass_file, 'r', encoding='utf-8') as f:
        lines = f.readlines()

    styles = []
    write_styles = False
    for line in lines:
        if line.strip().startswith("[V4+ Styles]"):
            write_styles = True
        elif line.strip().startswith("[Events]"):
            break
        elif write_styles:
            styles.append(line)
    
    return styles

def srt_to_ass(srt_file, ass_styles, output_ass_file):
    """将 .srt 文件转换为 .ass 格式，并使用给定的样式"""
    subs = pysrt.open(srt_file)
    
    with open(output_ass_file, 'w', encoding='utf-8') as ass_file:
        # 写入 .ass 文件的基本信息和样式
        ass_file.write("[Script Info]\n")
        ass_file.write("; Script generated by Python\n")
        ass_file.write("ScriptType: v4.00+\n")
        ass_file.write("PlayDepth: 0\n")
        ass_file.write("\n")

        # 写入样式部分
        ass_file.write("[V4+ Styles]\n")
        ass_file.writelines(ass_styles)
        ass_file.write("\n[Events]\n")
        ass_file.write("Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n")
        
        # 将每个字幕条目转换为 .ass 格式
        for sub in subs:
            start_time = sub.start.to_time()
            end_time = sub.end.to_time()
            start = f"{start_time.hour:01}:{start_time.minute:02}:{start_time.second:02}.{int(start_time.microsecond / 10000):02}"
            end = f"{end_time.hour:01}:{end_time.minute:02}:{end_time.second:02}.{int(end_time.microsecond / 10000):02}"

            # 写入字幕事件
            ass_file.write(f"Dialogue: 0,{start},{end},Default,,0,0,0,,{sub.text}\n")

def convert_srt_to_ass_with_style(srt_file, ass_template_file, output_ass_file):
    """主函数：将 .srt 转换为带样式的 .ass 文件"""
    ass_styles = extract_ass_styles(ass_template_file)
    srt_to_ass(srt_file, ass_styles, output_ass_file)

# 示例使用
ass_template_file = "template.ass"
output_ass_file = "output.ass"

if __name__ == "__main__":
    srt_file = sys.argv[1]
    convert_srt_to_ass_with_style(srt_file, ass_template_file, output_ass_file)
