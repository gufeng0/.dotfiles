lua require('plugins')

" runtime 加载.vim {{{
runtime settings.vim
runtime foldtext.vim

if has("win32")
    runtime escalt.vim
endif

if has("gui")
    runtime gvim.vim
endif

runtime functions.vim
" }}}

" vim-xkbswitch {{{
let g:XkbSwitchEnabled = 1
let g:XkbSwitchLib = '/usr/local/lib/libInputSourceSwitcher.dylib'
" }}}

" autocmd {{{
augroup file_type
    autocmd!
    autocmd FileType * set formatoptions-=o | if getfsize(@%) > 1024 * 1024 | setlocal syntax=OFF | endif
    autocmd FileType help set buflisted
augroup END
" }}}
 
" visual_multi {{{
let g:VM_maps = {}
let g:VM_maps["Select Cursor Down"] = '<m-n>'
" }}}
 
" othree/eregex.vim {{{
let g:eregex_default_enable = 0
" }}}

" vim-commentary {{{
augroup vim_commentary
    autocmd FileType crontab setlocal commentstring=#\ %s
augroup END
" }}}

" auto-paris {{{
let g:AutoPairs= {'(':')', '[':']', '{':'}',"'":"'",'"':'"', "`":"`", '```':'```', '"""':'"""', "'''":"'''"}
let g:AutoPairsShortcutToggle = ''
let g:AutoPairsShortcutJump = ''
let g:AutoPairsShortcutFastWrap = ''
let g:AutoPairsMoveCharacter = ''
" }}}

" vim-textobj-parameter {{{
let g:vim_textobj_parameter_mapping = 'a'
" }}}

" delimitMate {{{
let g:delimitMate_expand_cr=1
" }}}

" supertab {{{
let g:SuperTabDefaultCompletionType = "<c-n>"
" }}}

" toggle_terminal {{{

" set your favorite shell
if has("win32")
    let g:toggle_terminal#command = 'wsl'
else
    let g:toggle_terminal#command = ''
endif

" set terminal window position
" (see possible options at :help vertical)
" let g:toggle_terminal#position = 's'

" }}}

" alias {{{
command! Json set ft=json
command! Jp set ft=jproperties
command! Diff windo difft
command! Diffo windo diffo
" }}}

" 主题配置 {{{
colorscheme one
set bg=dark
hi TSPunctBracket guifg=#ABB2BF
" }}}

runtime mappings.vim
runtime misc.vim
runtime runner.vim

call timer_start(0, 'LoadPlug')
function! LoadPlug(timer) abort
    runtime im.vim
    silent! PackerLoad coc.nvim
    set clipboard=unnamed
endfunction
